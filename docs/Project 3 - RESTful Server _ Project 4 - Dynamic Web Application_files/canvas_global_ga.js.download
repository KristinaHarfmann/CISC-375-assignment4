

/*-----------------------------TOP----------------------------------------*/
//adds a custom button to SIS Imports for admins to scroll through previous SIS Import data
//dust-core.min.js, templates.js, and sis_import_extra.js hosted in AWS.

if(window.location.href.indexOf('sis_import')>-1){
  var base_url = 'https://s3.amazonaws.com/SSL_Assets/jsheringer/show_more_imports_js/';
  require([base_url + 'dust-core.min.js', base_url + 'templates.js', base_url + 'sis_import_extras.js']);
}
/*-----------------------------BOTTOM----------------------------------------*/







/*-----------------------------TOP----------------------------------------*/


/*---------------------------ONPAGE Function - required by File Type Limit filter applied below------------------------------------------*/


onPage(/\/courses\/\d+\/settings/, function() {
  // do something
});

hasAnyRole('admin', function(hasRole) {
  if (hasRole) {
    // do something
  } else {
    // do something else
  }
});

isUser(1, function(isRyan) {
  if (isRyan) {
    // do something
  } else {
    // so something else
  }
});

onElementRendered('a[href=#create_ticket]', function(el) {
  // do something with el (a jquery element collection)
});

function onPage(regex, fn) {
  if (location.pathname.match(regex)) fn();
}

function hasAnyRole(/*roles, cb*/) {
  var roles = [].slice.call(arguments, 0);
  var cb = roles.pop();
  for (var i = 0; i < arguments.length; i++) {
    if (ENV.current_user_roles.indexOf(arguments[i]) !== -1) {
      return cb(true);
    }
  }
  return cb(false);
}

function isUser(id, cb) {
  cb(ENV.current_user_id == id);
}

function onElementRendered(selector, cb, _attempts) {
  var el = $(selector);
  _attempts = ++_attempts || 1;
  if (el.length) return cb(el);
  if (_attempts == 60) return;
  setTimeout(function() {
    onElementRendered(selector, cb, _attempts);
  }, 250);
}

/*---------------------------BOTTOM------------------------------------------*/


/*-----------------------------TOP----------------------------------------*/


/*
Show list of file types for file limitation on assignment uploads.
*/
/* Note: uses onPage function by RPFlorence from https://gist.github.com/rpflorence/5817898  */
onPage(/\/courses\/\d+\/assignments\/(\d+\/edit|new)/, function() {
onElementRendered('div#allowed_extensions_container', function(el) {
//alert('On Page!');
if(!$('div#file_type_selection').length){
var ft = {
"Word" : "doc,docx",
"Excel" : "xls,xlsx",
"PowerPoint" : "ppt,pptx",
"PDF Files" : "pdf",
"Text Files" : "txt",
"Web Pages" : "html,htm",
"Images" : "jpg,jpeg,gif,png,tiff,tif,bmp",
"Zip Files" : "zip"
};
$('div#allowed_extensions_container').append(function(){
curr = $('input#assignment_allowed_extensions').val();
var return_val = '<div class="form-hoizontal controls"><br />...or select from the list of common files below:<table cellpadding="5">';
var c = 0;
var ischecked = '';
$.each(ft, function(key, val){
if(c == 0){
return_val += '<tr>';
}
if(curr.length>1 && curr.search(val) != -1){
ischecked = 'checked';
}else{
ischecked = '';
}
return_val += '<td><input class="selectfiletypelist" style="margin: 0 5px 4px 0;" id="select_filetype_' + key + '" type="checkbox" name="' + val + '" ' + ischecked + ' />' + key + '</td>';
if(c == 1){
return_val += "</tr>\n";
c = 0;
}else{
c++;
}
});
return_val += "\n</table></div>";
return return_val;

});
}
/*Check for checkbox clicks to add/remove items from the file extension list*/
$("input.selectfiletypelist").click(function(){

if($(this).attr('checked') == "checked"){
var ftlval = $('input#assignment_allowed_extensions').val();
if(ftlval.length>0 && ftlval.substr(-1) != ','){
ftlval += ',';
}
$('input#assignment_allowed_extensions').val(ftlval + $(this).attr('name'));
}else{
var ftlval_del = $(this).attr('name');
ftlval = $('input#assignment_allowed_extensions').val();
ftlval = ftlval.replace(new RegExp(ftlval_del, 'g'),"");
if(ftlval.length>1){
ftlval = ftlval.replace(new RegExp(',,', 'g'),",");
if(ftlval.substr(-1) == ","){
ftlval = ftlval.substr(0,(ftlval.length - 1));
}
if(ftlval.substr(0,1) == ","){
ftlval = ftlval.substr(1,ftlval.length);
}
}else{
ftlval = '';
}

$('input#assignment_allowed_extensions').val(ftlval);
}
});
});
/*Sanity check of file extensions if extensions box is clicked*/
onElementRendered('input#assignment_allowed_extensions', function(el) {
if(el.click){
$('input#assignment_allowed_extensions').blur(function (){
var curr = $('input#assignment_allowed_extensions').val();
curr=curr.trim();
if(curr.substr(-1) == ','){
curr=curr.substr(0,(curr.length - 1));
}
if(curr.substr(0,1) == ','){
curr=curr.substr(1,(curr.length));
}
$('input#assignment_allowed_extensions').val(curr);
if(curr.search(/([^A-Za-z0-9,]+)/m) > 0){
alert('There are one or more errors in your Allowed File Extensions field.\n\n *This field should contain a comma (,) delimited list of file extensions (ex: doc,docx,pdf)\n *Do not include a dot (.) as part of the file extension\n *Do not include any non-Alphanumeric (A-Z 0-9) characters other than the comma (,) used to delimit the file extensions')
}
});
}
el.click(function() {
var clickval = $('input#assignment_allowed_extensions').val();
if(clickval.substr(-1) != ',' && clickval.length > 0){
$('input#assignment_allowed_extensions').val(clickval + ',');
}
});
});
});

/*-----------------------------BOTTOM----------------------------------------*/

////////////////////////////////////////////////////
// DESIGN TOOLS CONFIG                            //
////////////////////////////////////////////////////
// Copyright (C) 2017  Utah State University
var DT_variables = {
        iframeID: '',
        // Path to the hosted USU Design Tools
        path: 'https://designtools.ciditools.com/',
        templateCourse: '14170',
        // OPTIONAL: Button will be hidden from view until launched using shortcut keys
        hideButton: true,
    	 // OPTIONAL: Limit by course format
	     limitByFormat: false, // Change to true to limit by format
	     // adjust the formats as needed. Format must be set for the course and in this array for tools to load
	     formatArray: [
            'online',
            'on-campus',
            'blended'
        ],
        // OPTIONAL: Limit tools loading by users role
        limitByRole: false, // set to true to limit to roles in the roleArray
        // adjust roles as needed
        roleArray: [
            'student',
            'teacher',
            'admin'
        ],
        // OPTIONAL: Limit tools to an array of Canvas user IDs
        limitByUser: false, // Change to true to limit by user
        // add users to array (Canvas user ID not SIS user ID)
        userArray: [
            '1234',
            '987654'
        ]
};

// Run the necessary code when a page loads
$(document).ready(function () {
    'use strict';
    // This runs code that looks at each page and determines what controls to create
    $.getScript(DT_variables.path + 'js/master_controls.js', function () {
        console.log('master_controls.js loaded');
    });
});
////////////////////////////////////////////////////
// END DESIGN TOOLS CONFIG                        //
////////////////////////////////////////////////////

//
// BEGIN Atomic Search code
//
var atomicSearchWidgetScript = document.createElement("script");
atomicSearchWidgetScript.src = "https://d2u53n8918fnto.cloudfront.net/atomic_search_widget.js" + "?ts=" + new Date().getTime();
document.getElementsByTagName("head")[0].appendChild(atomicSearchWidgetScript);
//
// END Atomic Search code
//

//
// BEGIN Google Analytics code
//
// GOOGLE TAG MANAGER CODE
(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-T6493TS');

var googleTagManager = '<!-- Google Tag Manager (noscript) -->' +
    '<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-T6493TS" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>' +
    '<!-- End Google Tag Manager (noscript) -->';
$('body').prepend(googleTagManager);

//
// END Google Analytics code
//
